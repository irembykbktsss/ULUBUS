diff --git a/app/src/main/java/com/siladem/ulubus/Seferler.java b/app/src/main/java/com/siladem/ulubus/Seferler.java
index 547c398..261e63d 100644
--- a/app/src/main/java/com/siladem/ulubus/Seferler.java
+++ b/app/src/main/java/com/siladem/ulubus/Seferler.java
@@ -7,6 +7,14 @@ import android.view.View;
 import android.widget.ListView;
 import android.widget.TextView;
 
+import com.siladem.ulubus.dao.MySqlDb;
+import com.siladem.ulubus.dao.SeferDao;
+
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.util.ArrayList;
+import java.util.List;
+
 public class Seferler extends AppCompatActivity {
 
     TextView bilgilerView;
@@ -26,8 +34,44 @@ public class Seferler extends AppCompatActivity {
 
         bilgilerView.setText(tarih);
 
-        //veri tabanı bağla, oku , sorgula,arraye ekle,listwiew ile bağla.
+        MySqlDb mySqlDb = new MySqlDb();
+        try {
+            ResultSet resultSet = mySqlDb.executeQuery("Select * from seferler where kalkis_yeri='" + nereden + "' and varis_yeri='" + nereye +"'");
+            List<SeferDao> seferler = resultSetToSeferler(resultSet);
+            if(seferler != null && seferler.size() > 0)
+            {
+                //Seferleri listView'e bagla
+            }
+            else
+            {
+                //Sefer bulunamadi mesaji gonder
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            mySqlDb.close();
+        }
+
+
+    }
+
+    private List<SeferDao> resultSetToSeferler(ResultSet resultSet) throws SQLException {
+        List<SeferDao> seferler= new ArrayList<>();
 
+        while(resultSet.next())
+        {
+            seferler.add(new SeferDao(
+                    resultSet.getInt("id"),
+                    resultSet.getString("kalkis_yeri"),
+                    resultSet.getString("varis_yeri"),
+                    resultSet.getString("kalkis_zamani"),
+                    resultSet.getString("varis_zamani"),
+                    resultSet.getString("ucret"),
+                    resultSet.getInt("koltuk_sayisi"),
+                    resultSet.getString("otobus_tipi"),
+                    resultSet.getString("dolu_koltuklar")));
+        }
+        return seferler;
     }
 
     public void koltukGetir(View view){
diff --git a/app/src/main/java/com/siladem/ulubus/dao/MySqlDb.java b/app/src/main/java/com/siladem/ulubus/dao/MySqlDb.java
new file mode 100644
index 0000000..fc44bb0
--- /dev/null
+++ b/app/src/main/java/com/siladem/ulubus/dao/MySqlDb.java
@@ -0,0 +1,44 @@
+package com.siladem.ulubus.dao;
+
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+
+public class MySqlDb {
+    private Connection connect = null;
+    private PreparedStatement preparedStatement = null;
+    private ResultSet resultSet = null;
+
+    public ResultSet executeQuery(String query) throws Exception {
+        Class.forName("com.mysql.jdbc.Driver");
+        connect = DriverManager
+                .getConnection("jdbc:mysql://81.4.120.221:3306/ulubus", "ulubus_app", "ulubus123-");
+
+        preparedStatement = connect
+                .prepareStatement(query);
+        return preparedStatement.executeQuery();
+    }
+
+    public void close() {
+        try {
+            if (resultSet != null) {
+                resultSet.close();
+            }
+
+            if (preparedStatement != null) {
+                preparedStatement.close();
+            }
+
+            if (connect != null) {
+                connect.close();
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+}
+
+
+
+
diff --git a/app/src/main/java/com/siladem/ulubus/dao/SeferDao.java b/app/src/main/java/com/siladem/ulubus/dao/SeferDao.java
new file mode 100644
index 0000000..1df8b9f
--- /dev/null
+++ b/app/src/main/java/com/siladem/ulubus/dao/SeferDao.java
@@ -0,0 +1,97 @@
+package com.siladem.ulubus.dao;
+
+public class SeferDao {
+    private int id;
+    private String kalkisYeri;
+    private String varisYeri;
+    private String kalkisZamani;
+    private String varisZamani;
+    private String ucret;
+    private int koltukSayisi;
+    private String otobusTipi;
+    private String doluKoltuklar;
+
+    public SeferDao(int id, String kalkisYeri, String varisYeri, String kalkisZamani, String varisZamani, String ucret, int koltukSayisi, String otobusTipi, String doluKoltuklar) {
+        this.id = id;
+        this.kalkisYeri = kalkisYeri;
+        this.varisYeri = varisYeri;
+        this.kalkisZamani = kalkisZamani;
+        this.varisZamani = varisZamani;
+        this.ucret = ucret;
+        this.koltukSayisi = koltukSayisi;
+        this.otobusTipi = otobusTipi;
+        this.doluKoltuklar = doluKoltuklar;
+    }
+
+    public int getId() {
+        return id;
+    }
+
+    public void setId(int id) {
+        this.id = id;
+    }
+
+    public String getKalkisYeri() {
+        return kalkisYeri;
+    }
+
+    public void setKalkisYeri(String kalkisYeri) {
+        this.kalkisYeri = kalkisYeri;
+    }
+
+    public String getVarisYeri() {
+        return varisYeri;
+    }
+
+    public void setVarisYeri(String varisYeri) {
+        this.varisYeri = varisYeri;
+    }
+
+    public String getKalkisZamani() {
+        return kalkisZamani;
+    }
+
+    public void setKalkisZamani(String kalkisZamani) {
+        this.kalkisZamani = kalkisZamani;
+    }
+
+    public String getVarisZamani() {
+        return varisZamani;
+    }
+
+    public void setVarisZamani(String varisZamani) {
+        this.varisZamani = varisZamani;
+    }
+
+    public String getUcret() {
+        return ucret;
+    }
+
+    public void setUcret(String ucret) {
+        this.ucret = ucret;
+    }
+
+    public int getKoltukSayisi() {
+        return koltukSayisi;
+    }
+
+    public void setKoltukSayisi(int koltukSayisi) {
+        this.koltukSayisi = koltukSayisi;
+    }
+
+    public String getOtobusTipi() {
+        return otobusTipi;
+    }
+
+    public void setOtobusTipi(String otobusTipi) {
+        this.otobusTipi = otobusTipi;
+    }
+
+    public String getDoluKoltuklar() {
+        return doluKoltuklar;
+    }
+
+    public void setDoluKoltuklar(String doluKoltuklar) {
+        this.doluKoltuklar = doluKoltuklar;
+    }
+}
diff --git a/app/src/main/java/com/siladem/ulubus/db/MySqlDb.java b/app/src/main/java/com/siladem/ulubus/db/MySqlDb.java
deleted file mode 100644
index 690a5ca..0000000
--- a/app/src/main/java/com/siladem/ulubus/db/MySqlDb.java
+++ /dev/null
@@ -1,123 +0,0 @@
-package com.siladem.ulubus.db;
-
-import java.sql.Connection;
-import java.sql.Date;
-import java.sql.DriverManager;
-import java.sql.PreparedStatement;
-import java.sql.ResultSet;
-import java.sql.SQLException;
-import java.sql.Statement;
-
-public class MySqlDb {
-    private Connection connect = null;
-    private Statement statement = null;
-    private PreparedStatement preparedStatement = null;
-    private ResultSet resultSet = null;
-
-    public void readDataBase() throws Exception {
-        try {
-            // This will load the MySQL driver, each DB has its own driver
-            Class.forName("com.mysql.jdbc.Driver");
-            // Setup the connection with the DB
-            connect = DriverManager
-                    .getConnection("jdbc:mysql://localhost/feedback?"
-                            + "user=sqluser&password=sqluserpw");
-
-            // Statements allow to issue SQL queries to the database
-            statement = connect.createStatement();
-            // Result set get the result of the SQL query
-            resultSet = statement
-                    .executeQuery("select * from feedback.comments");
-            writeResultSet(resultSet);
-
-            // PreparedStatements can use variables and are more efficient
-            preparedStatement = connect
-                    .prepareStatement("insert into  feedback.comments values (default, ?, ?, ?, ? , ?, ?)");
-            // "myuser, webpage, datum, summary, COMMENTS from feedback.comments");
-            // Parameters start with 1
-            preparedStatement.setString(1, "Test");
-            preparedStatement.setString(2, "TestEmail");
-            preparedStatement.setString(3, "TestWebpage");
-            preparedStatement.setDate(4, new java.sql.Date(2009, 12, 11));
-            preparedStatement.setString(5, "TestSummary");
-            preparedStatement.setString(6, "TestComment");
-            preparedStatement.executeUpdate();
-
-            preparedStatement = connect
-                    .prepareStatement("SELECT myuser, webpage, datum, summary, COMMENTS from feedback.comments");
-            resultSet = preparedStatement.executeQuery();
-            writeResultSet(resultSet);
-
-            // Remove again the insert comment
-            preparedStatement = connect
-                    .prepareStatement("delete from feedback.comments where myuser= ? ; ");
-            preparedStatement.setString(1, "Test");
-            preparedStatement.executeUpdate();
-
-            resultSet = statement
-                    .executeQuery("select * from feedback.comments");
-            writeMetaData(resultSet);
-
-        } catch (Exception e) {
-            throw e;
-        } finally {
-            close();
-        }
-
-    }
-
-    private void writeMetaData(ResultSet resultSet) throws SQLException {
-        //  Now get some metadata from the database
-        // Result set get the result of the SQL query
-
-        System.out.println("The columns in the table are: ");
-
-        System.out.println("Table: " + resultSet.getMetaData().getTableName(1));
-        for (int i = 1; i <= resultSet.getMetaData().getColumnCount(); i++) {
-            System.out.println("Column " + i + " " + resultSet.getMetaData().getColumnName(i));
-        }
-    }
-
-    private void writeResultSet(ResultSet resultSet) throws SQLException {
-        // ResultSet is initially before the first data set
-        while (resultSet.next()) {
-            // It is possible to get the columns via name
-            // also possible to get the columns via the column number
-            // which starts at 1
-            // e.g. resultSet.getSTring(2);
-            String user = resultSet.getString("myuser");
-            String website = resultSet.getString("webpage");
-            String summary = resultSet.getString("summary");
-            Date date = resultSet.getDate("datum");
-            String comment = resultSet.getString("comments");
-            System.out.println("User: " + user);
-            System.out.println("Website: " + website);
-            System.out.println("summary: " + summary);
-            System.out.println("Date: " + date);
-            System.out.println("Comment: " + comment);
-        }
-    }
-
-    // You need to close the resultSet
-    private void close() {
-        try {
-            if (resultSet != null) {
-                resultSet.close();
-            }
-
-            if (statement != null) {
-                statement.close();
-            }
-
-            if (connect != null) {
-                connect.close();
-            }
-        } catch (Exception e) {
-
-        }
-    }
-}
-
-
-
-
